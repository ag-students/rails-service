version: '3.7'
x-rails-service-context:
  context: .
  dockerfile: Dockerfile.dev
x-rails-service-env:
  DATABASE_URL: 'postgresql://postgres@db/rails-service_development'
  RAILS_LOG_TO_STDOUT: 'true'
  RAILS_SERVE_STATIC_FILES: 'true'
  RAILS_ENV: development
  SECRET_KEY_BASE: ''
  DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
  NODE_ENV: development
x-rails-service-volumes:
  volumes:
    - 'bundle:/usr/local/bundle:cached'
    - '.:/app:cached'
services:
  db:
    image: 'postgres:10-alpine'
    environment:
      PGPASSWORD_SUPERUSER: postgres
      PGPASSWORD_ADMIN: postgres
      PGPASSWORD_STANDBY: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - 'dbdata:/var/lib/postgresql/data'
  rails-service:
    volumes:
      - 'bundle:/usr/local/bundle:cached'
      - '.:/app:cached'
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: 'postgresql://postgres@db/rails-service_development'
      RAILS_LOG_TO_STDOUT: 'true'
      RAILS_SERVE_STATIC_FILES: 'true'
      RAILS_ENV: development
      SECRET_KEY_BASE: ''
      DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
      NODE_ENV: development
    user: '$UID:$GID'
    command: ash -c "rm -f tmp/pids/server.pid && bundle exec rails s -b 0.0.0.0"
    depends_on:
      - db
    ports:
      - '8080:3000'
  webpacker:
    volumes:
      - 'bundle:/usr/local/bundle:cached'
      - '.:/app:cached'
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: 'postgresql://postgres@db/rails-service_development'
      RAILS_LOG_TO_STDOUT: 'true'
      RAILS_SERVE_STATIC_FILES: 'true'
      RAILS_ENV: development
      SECRET_KEY_BASE: ''
      DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
      NODE_ENV: development
    command: ash -c "yarn && ./bin/webpack-dev-server --progress â€”colors --host 0.0.0.0"
    depends_on:
      - rails-service
    ports:
      - '3035:3035'
volumes:
  dbdata: null
  bundle: null
